{"version":3,"sources":["webpack:///webpack/bootstrap 12b4702f05adefbe742f","webpack:///./lib/util.js","webpack:///./lib/moving_object.js","webpack:///./lib/bolt.js","webpack:///./lib/player.js","webpack:///./lib/game.js","webpack:///./lib/game_view.js","webpack:///./lib/falling_bolts.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA,KAAK;;;;AAIL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sB;;;;;;AC3BA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,mC;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;;;AAGA,8B;;;;;;ACrGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;AAIA,sB;;;;;;ACxCA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA,wB;;;;;;AC1GA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;;AAGA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sB;;;;;;ACtKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,kC;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA,0B;;;;;;AC1FA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 12b4702f05adefbe742f","const Util = {\n\n   dist(pos1, pos2) {\n    return Math.sqrt(\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    );\n  },\n    randomColor() {\n        const hexColor = 'ABCDEF0123456789';\n        let color = '#';\n\n        for (let i = 0; i < 6; i++) {\n            color += hexColor[Math.floor((Math.random() * 16))];\n        }\n        return color;\n    },\n\n\n\n    randomRadius(asd) {\n        let rand = Math.floor(Math.random() * 50);\n        let radius = rand <= 25 ? 25 : rand;\n        radius = radius > 50 ? 50 : radius;\n        return radius;\n    }\n};\n\nmodule.exports = Util;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util.js\n// module id = 0\n// module chunks = 0","const Util = require(\"./util\");\nconst Bolt = require('./bolt');\n\n\nclass MovingObject {\n    constructor(options) {\n        this.pos = options.pos;\n        this.vel = options.vel;\n        this.radius = options.radius;\n        this.color = options.color;\n        this.game = options.game;\n    }\n\n    draw(ctx) {\n        ctx.fillStyle = this.color;\n        ctx.beginPath();\n        ctx.arc(\n            this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true\n        );\n        ctx.fill();\n    }\n\n    move() {\n        this.newPos = [this.pos[0] + this.vel[0], this.pos[1] + this.vel[1]];\n        this.testPosRight = [this.newPos[0] + 15, this.newPos[1]];\n        this.testPosLeft = [this.newPos[0] - 5 - 135, this.newPos[1]];\n\n\n        if (this.constructor.name === 'Player') {\n            if (this.keyRight) {\n                this.vel = [5, 0];\n            }\n\n            if (this.keyLeft) {\n                this.vel = [-5, 0];\n            }\n\n            if (this.spacebar) {\n                this.vel = [this.vel[0] * 2, 0];\n            }\n\n            if (!this.keyLeft && !this.keyRight) {\n                this.vel = [0, 0];\n            }\n\n            if (this.game.isOutOfBounds(this.testPosRight) ||\n                this.game.isOutOfBounds(this.testPosLeft)) {\n                return;\n            }\n        }\n\n        this.pos = this.newPos;\n\n        if (this.game.isOutOfBounds(this.pos)) {\n            if (!this.game.gameOver) {\n             this.game.Score += 10; \n            }\n            \n            this.remove();\n\n        }\n        if (this.constructor.name === 'Bolt') {\n            this.boltFall();\n\n            if (this.hitFloor()) {\n                // if (this.pos[1] > 600) {\n                //     console.log(this.vel[1]);\n                //     console.log(this.pos[1]);\n                // }\n                this.vel = [this.vel[0], -this.vel[1] / this.game.bounce_friction];\n                // if (this.pos[1] > 600) {\n                //     this.pos[1] = this.pos[1]+ this.vel[1];\n                //     console.log(this.vel[1]);\n                //     console.log(this.pos[1]);\n                //     console.log(this.radius);\n                // }\n            }\n\n        }\n    }\n\n\n    remove() {\n        this.game.remove(this);\n    }\n    collideWithPlayer(otherObject) {\n        if (this.constructor.name === 'Player' || otherObject.constructor.name === 'Player')\n            this.game.GameOver();\n    }\n\n    collideWith(otherObject) {\n        const centerDist = Util.dist(this.pos, otherObject.pos);\n        return centerDist < (this.radius + otherObject.radius);\n    }\n\n\n\n}\nconst NORMAL_FRAME_TIME_DELTA = 1000 / 30;\n\n\nmodule.exports = MovingObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/moving_object.js\n// module id = 1\n// module chunks = 0","const Util = require(\"./util\");\nconst MovingObject = require(\"./moving_object\");\nconst Player = require(\"./player\");\n\nconst DEFAULTS = {\n    COLOR: '#000000',\n    GRAVITY: .5\n};\n\n\nclass Bolt extends MovingObject {\n    constructor(options = {}) {\n\n        options.color = Util.randomColor(DEFAULTS.COLOR);\n        options.radius = Util.randomRadius();\n        options.pos = options.game.randomPos();\n        options.vel = options.game.randomVec();\n        super(options);\n        this.game = options.game;\n    \n    }\n    boltFall() {\n        this.vel = [this.vel[0], this.vel[1] + DEFAULTS.GRAVITY];\n    }\n\n    hitFloor() {\n        if (this.pos[1] >= this.game.dim_y) {\n            console.log((this.pos[1] + this.radius) >= this.game.dim_y && this.vel[1] >= 0, 'pos', this.pos[1], 'rad', this.radius, 'vel',this.vel[1]);\n        }\n        if ((this.pos[1] + this.radius) >= this.game.dim_y && this.vel[1] >= 0) {\n            return true;\n        }\n        return false;\n    }\n \n\n}\n\n\n\nmodule.exports = Bolt;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/bolt.js\n// module id = 2\n// module chunks = 0","const MovingObject = require(\"./moving_object\");\nconst Util = require(\"./util\");\n\n\nclass Player extends MovingObject {\n    constructor(options) {\n\n        options.radius = Player.RADIUS;\n      \n        options.vel = [0, 0];\n        options.color = Util.randomColor();\n        super(options);\n\n        this.width = Player.WIDTH;\n        this.height = Player.HEIGHT;\n        this.keyLeft = this.keyLeft || false;\n        this.keyRight = this.keyRight || false;\n        this.spacebar = this.spacebar || false;\n\n        this.image = Player.STANDLEFT;\n\n        this.tickCount = 0;\n        this.frameIndex = 0;\n        this.ticksPerFrame = 10;\n    }\n\n    draw(ctx) {\n        var drawOptions = [Player.WALK];\n        if (this.keyLeft) {\n            drawOptions = drawOptions.concat(this.renderLeft());\n        } else if (this.keyRight) {\n            drawOptions = drawOptions.concat(this.renderRight());\n        } else {\n            this.image = this.frameIndex % 2 === 0 ? Player.STANDRIGHT : Player.STANDLEFT;\n            drawOptions = [this.image, 1, 1, 25, 32];\n        }\n\n        ctx.drawImage(\n            drawOptions[0],\n            drawOptions[1],\n            drawOptions[2],\n            drawOptions[3],\n            drawOptions[4],\n            this.pos[0],\n            this.pos[1],\n            Player.WIDTH,\n            Player.HEIGHT\n        );\n        this.update();\n    }\n \n    update() {\n        this.tickCount += 1;\n\n        if (this.tickCount > this.ticksPerFrame) {\n            this.tickCount = 0;\n            this.frameIndex += 1;\n        }\n    }\n\n    renderLeft() {\n        switch (this.frameIndex % 5) {\n            case 0:\n                return [5, 0, 25, 30];\n            case 1:\n                return [35, 0, 25, 30];\n            case 2:\n                return [60, 0, 25, 30];\n            case 3:\n                return [90, 0, 25, 30];\n            case 4:\n                return [115, 0, 25, 30];\n        }\n    }\n\n    renderRight() {\n        switch (this.frameIndex % 5) {\n            case 0:\n                return [5, 40, 25, 30];\n            case 1:\n                return [35, 40, 25, 30];\n            case 2:\n                return [60, 40, 25, 30];\n            case 3:\n                return [90, 40, 25, 30];\n            case 4:\n                return [115, 40, 25, 30];\n        }\n    }\n}\n\n\nPlayer.RADIUS = 10;\nPlayer.WIDTH = 25;\nPlayer.HEIGHT = 38.4;\n\nPlayer.STANDLEFT = new Image();\nPlayer.STANDLEFT.src = 'assets/standleft_00.png';\n\nPlayer.STANDRIGHT = new Image();\nPlayer.STANDRIGHT.src = 'assets/standright_00.png';\n\nPlayer.WALK = new Image();\nPlayer.WALK.src = 'assets/walk.png';\n\n\nmodule.exports = Player;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/player.js\n// module id = 3\n// module chunks = 0","const Bolt = require(\"./bolt\");\nconst Player = require(\"./player\");\nconst Util = require(\"./util\");\nconst MovingObject = require('./moving_object');\n\nclass Game {\n    constructor(ctx) {\n        this.bolts = [];\n        this.players = [];\n        this.addFallingBolts();\n        this.gameOver = false;\n        this.BoltRate = 5000;\n        this.ctx = ctx;\n        this.dim_x = 1000;\n        this.dim_y = 600;\n        this.FPS = 60;\n        this.score = 0;\n        this.gravity = 0.5;\n        this.bounce_friction = 1.1;\n        this.timer = window.setInterval(() => {\n            this.add(new Bolt({\n                game: this\n            }));\n        }, this.BoltRate);\n    }\n\n\n    add(object) {\n        if (object instanceof Bolt) {\n            this.bolts.push(object);\n        } else if (object instanceof Player) {\n            this.players.push(object);\n        } else {\n            throw \"unknown type of object\";\n        }\n    }\n    addFallingBolts() {\n        for (let i = 0; i < Game.NUM_FALLING_BOLTS; i++) {\n            this.add(new Bolt({\n                game: this\n            }));\n        }\n    }\n    addPlayer() {\n        const player = new Player({\n            pos: [500, 562],\n            game: this\n        });\n\n        this.add(player);\n        return player;\n    }\n\n    allObjects() {\n        return [].concat(this.players, this.bolts);\n    }\n\n    checkCollisions() {\n\n        let game = this;\n\n        this.allObjects().forEach((obj1) => {\n            game.allObjects().forEach((obj2) => {\n                if (obj1 === obj2) {\n                    return;\n                }\n                if (obj1.collideWith(obj2)) {\n                    obj1.collideWithPlayer(obj2);\n                }\n            });\n        });\n    }\n\n\n\n    draw(ctx) {\n        ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n        ctx.fillStyle = '#ffffff';\n        ctx.fillRect(0, 0, Game.DIM_X, Game.DIM_Y);\n\n        ctx.clearRect(130, 570, 10, 30);\n        ctx.fillStyle = 'gray';\n        ctx.fillRect(130, 570, 10, 30);\n        this.allObjects().forEach((object) => {\n            object.draw(ctx);\n        });\n\n        if (this.gameOver === true) {\n\n            ctx.beginPath();\n            ctx.globalAlpha = 0.5;\n\n            ctx.lineWidth = \"4\";\n            ctx.strokeStyle = \"Black\";\n            ctx.fillRect(0, 0, 1000, 600);\n            ctx.stroke();\n            ctx.globalAlpha = 1;\n            ctx.font = \"35px Helvetica\";\n            ctx.fillStyle = \"white\";\n            ctx.textAlign = \"center\";\n            ctx.fillText(\"Game Over\", 400, 300);\n            ctx.fillText(\"Press enter to try again\", 400, 400);\n\n        }\n    }\n\n    isOutOfBounds(position) {\n        return (position[0] < 0) || (position[1] < 0) ||\n            (position[0] > Game.DIM_X) || (position[1] > Game.DIM_Y);\n    }\n    moveObjects(delta) {\n        this.allObjects().forEach((object) => {\n            object.move(delta);\n        });\n    }\n\n    randomPos() {\n        return [0, (Game.DIM_Y * Math.random()) / 3];\n    }\n    randomVec() {\n        return [(Math.random() * ((7 / 1000) * Game.DIM_X)) + ((3 / 1000) * Game.DIM_X), 0];\n    }\n\n\n    remove(object) {\n        if (object instanceof Bolt) {\n            if (!this.gameOver) {\n                var idx = this.bolts.indexOf(object);\n                this.bolts[idx] = new Bolt({\n                    game: this\n                });\n            } else {\n                this.bolts.splice(this.bolts.indexOf(object), 1);\n            }\n        } else if (object instanceof Player) {\n            var playerPos = object.pos;\n\n            this.players.splice(this.players.indexOf(object), 1);\n        } else {\n            throw \"unknown type of object\";\n        }\n    }\n    step(delta) {\n        this.moveObjects(delta);\n        this.checkCollisions();\n    }\n\n    GameOver() {\n        this.remove(this.players[0]);\n        this.gameOver = true;\n\n\n    }\n}\n\n\n\nGame.BG_COLOR = 'white';\nGame.DIM_X = 1000;\nGame.DIM_Y = 600;\nGame.FPS = 60;\nGame.NUM_FALLING_BOLTS = 1;\nGame.BOUNCE_FRCITION = 1.1;\nGame.SCORE = 0;\nGame.Gravity = 0.5;\n\nmodule.exports = Game;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 4\n// module chunks = 0","class GameView {\n  constructor(game, ctx) {\n    this.ctx = ctx;\n    this.game = game;\n    this.timerId = null;\n  }\n\n  checkKeyPressed(event) {\n    switch (event.keyCode) {\n      case 37:\n        this.player.keyLeft = true;\n        break;\n      case 39:\n        this.player.keyRight = true;\n        break;\n      case 32:\n        this.player.spacebar = true;\n        break;\n      case 84:\n\n    }\n  }\n\n  checkKeyLifted(event) {\n    switch (event.keyCode) {\n      case 37:\n        this.player.keyLeft = false;\n        break;\n      case 39:\n        this.player.keyRight = false;\n        break;\n      case 32:\n        this.player.spacebar = false;\n        break;\n      case 84:\n    }\n  }\n  onEnterKey(event) {\n    if (event.keyCode === 13 && this.game.gameOver === true) {\n      this.gameStart();\n    }\n  }\n  gameStart() {\n    this.game.gameOver = false;\n    this.player = this.game.addPlayer();\n    window.addEventListener(\"keydown\", this.checkKeyPressed.bind(this));\n    window.addEventListener(\"keyup\", this.checkKeyLifted.bind(this));\n    window.addEventListener(\"keydown\", this.onEnterKey.bind(this));\n    this.start();\n  }\n\n  start() {\n    let gameView = this;\n    clearInterval(this.timerId);\n    this.game.Score = 0;\n    this.timerId = setInterval(\n      () => {\n        gameView.game.step();\n        gameView.game.draw(gameView.ctx);\n        gameView.updateScore();\n\n\n        if (gameView.game.bolts.length === 0) {\n          gameView.stop();\n        }\n      }, 1000 / 60\n    );\n  }\n\n  updateScore() {\n    if (this.game.gameOver) {\n      this.ctx.textAlign=\"center\"; \n\n      this.ctx.font = \"50px Helvetica\";\n      this.ctx.fillStyle = \"white\";\n      this.ctx.fillText(\"Score: \" + this.game.Score, 400, 200);\n    } else {\n      this.ctx.font = \"15px Helvetica\";\n      this.ctx.fillStyle = \"black\";\n      this.ctx.fillText(\"Score: \" + this.game.Score, 820, 40);\n    }\n\n  }\n\n\n  stop() {\n    clearInterval(this.timerId);\n  }\n}\n\nmodule.exports = GameView;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_view.js\n// module id = 5\n// module chunks = 0","const Game = require(\"./game\");\nconst GameView = require(\"./game_view\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvas = document.getElementsByTagName(\"canvas\")[0];\n  canvas.width = Game.DIM_X;\n  canvas.height = Game.DIM_Y;\n\n  const ctx = canvas.getContext(\"2d\");\n  const game  = new Game(ctx);\n  new GameView(game, ctx).gameStart();\n});\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/falling_bolts.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}